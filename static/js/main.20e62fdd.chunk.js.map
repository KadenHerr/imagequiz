{"version":3,"sources":["communication/api.js","components/Home.js","components/Login.js","components/NavigationBar.js","components/QuizSlide.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["apiHost","api","getFlowers","fetch","then","response","json","getQuizzes","addScore","score","method","headers","body","JSON","stringify","Home","props","useState","flowers","setFlowers","onImageClick","event","onQuizClicked","target","id","useEffect","x","catch","e","console","log","style","textAlign","images","i","flw","push","onClick","className","to","Figure","Image","width","height","alt","name","src","picture","Caption","createFlowers","Login","history","useHistory","email","setEmail","password","setPassword","Form","onSubmit","trim","length","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","value","Text","Button","variant","NavigationBar","Navbar","bg","expand","Nav","Link","username","QuizSlide","answer","setAnswer","btnState","setBtnState","quizzes","setQuizzes","onAnswerGiven","quizNum","questionNum","choices","questionIndex","questions","choiceIndex","question","generateQuestions","quiz","generateQuizzes","Row","Col","disabled","Quiz","setScore","answerCount","setAnswerCount","lastPoint","alert","window","location","reload","App","localStorage","getItem","setUsername","setQuizNum","Container","fluid","exact","path","quizID","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20e62fdd.chunk.js","sourcesContent":["\r\nlet apiHost = \"https://imagequiz-serverside.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(apiHost + '/flowers')\r\n    .then(response => response.json());\r\n};\r\n\r\nlet getQuizzes = () => {\r\n    return fetch(apiHost + '/quizzes')\r\n    .then(response => response.json());\r\n};\r\n\r\nlet addScore = (score) => {\r\n    return fetch(apiHost + '/score', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(score)\r\n    });\r\n}\r\n\r\n\r\nlet api = {\r\n    getFlowers: getFlowers,\r\n    getQuizzes: getQuizzes,\r\n    addScore: addScore\r\n};\r\n\r\nexport default api;","import { Link } from \"react-router-dom\";\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../communication/api';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const [flowers, setFlowers] = useState(null);\r\n\r\n    let onImageClick = (event) => {\r\n        props.onQuizClicked(event.target.id);\r\n    }\r\n\r\n    \r\n    // Get the flowers array from the api\r\n    useEffect(() => {\r\n        if(flowers === null) {\r\n            api.getFlowers()\r\n            .then(x => setFlowers(x))\r\n            .catch(e => console.log(e));\r\n        }\r\n        console.log(\"useEffect ran\");\r\n    });\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: \"center\" }}>Home</h2>\r\n             {createFlowers()}\r\n        </div>\r\n    );\r\n\r\n\r\n    function createFlowers() {\r\n        let images = [];\r\n        let i = 0;\r\n        for (let flw in flowers) {\r\n            images.push(<Link id={i} onClick={onImageClick} className='link' to=\"/quiz\">\r\n                <Figure id={i}>\r\n                    <Figure.Image id={i} width={171} height={180}\r\n                        alt={flowers[flw].name}\r\n                        src={flowers[flw].picture} />\r\n                    <Figure.Caption id={i}>{flowers[flw].name}</Figure.Caption>\r\n                </Figure>\r\n            </Link>)\r\n            i++;\r\n        }\r\n        return images;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default function Login(props) {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let onLoginSubmitted = () => {\r\n        if (email.trim().length === 0 || password.trim().length === 0) {\r\n            return;\r\n        }\r\n        props.onLoggedIn(email);\r\n        history.push('/');\r\n    }\r\n\r\n    let onEmailChanged = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    let onPasswordChanged = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onLoginSubmitted}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChanged} />\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else (or will we?).\r\n        </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChanged} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n      </Button>\r\n        </Form>\r\n\r\n\r\n\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport Nav  from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport '../App.css'\r\n\r\nfunction NavigationBar(props) {\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n\r\n            <Nav.Link>\r\n                <Link className='link' to=\"/\">Home</Link>\r\n            </Nav.Link>\r\n\r\n            <Nav.Link>\r\n                {\r\n                    props.username === '' ?\r\n                    <Link className='link' to=\"/login\">Login</Link>\r\n                    :\r\n                    <Link className='link' to=\"/logout\">{props.username}, Logout</Link>\r\n                }\r\n            </Nav.Link>\r\n\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;","import Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../communication/api';\r\n\r\n\r\nexport default function QuizSlide(props) {\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [btnState, setBtnState] = useState(false);\r\n    const [quizzes, setQuizzes] = useState(null);\r\n\r\n    let onAnswerGiven = (event) => {\r\n        setBtnState(true);\r\n        if (quizzes[props.quizNum][props.questionNum].choices[event.target.id] === quizzes[props.quizNum][props.questionNum].answer) {\r\n            setAnswer(\"You answered \" + quizzes[props.quizNum][props.questionNum].answer + \" and got it right!\");\r\n            props.onAnswerGiven(true);\r\n        } else {\r\n            setAnswer(\"You got it wrong. Correct answer is: \" + quizzes[props.quizNum][props.questionNum].answer);\r\n            props.onAnswerGiven(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (quizzes === null) {\r\n            api.getFlowers()\r\n                .then(x => setQuizzes(generateQuizzes(x)))\r\n                .catch(e => console.log(e));\r\n        }\r\n    });\r\n\r\n    // Generate quiz questions\r\n    function generateQuestions(flowers) {\r\n        let questions = [];\r\n        let choiceIndex = 0;\r\n        for (let i = 0; i < flowers.length; i++) {\r\n            choiceIndex = i;\r\n            if (choiceIndex > (flowers.length - 4)) {\r\n                choiceIndex = i - 2;\r\n            }\r\n            let question = {\r\n                picture: flowers[i].picture,\r\n                choices: [flowers[choiceIndex].name, flowers[choiceIndex + 1].name, flowers[choiceIndex + 2].name],\r\n                answer: flowers[i].name\r\n            };\r\n            questions.push(question);\r\n        }\r\n        return questions;\r\n    };\r\n\r\n    // Generate quizzes\r\n    function generateQuizzes(flowers) {\r\n        let quizzes = [];\r\n        let questionIndex = 0;\r\n        let questions = generateQuestions(flowers);\r\n        for (let i = 0; i < questions.length; i++) {\r\n            questionIndex = i;\r\n            if (questionIndex > (questions.length - 7)) {\r\n                questionIndex = i - 5;\r\n            }\r\n            let quiz = [\r\n                questions[questionIndex],\r\n                questions[questionIndex + 1],\r\n                questions[questionIndex + 2],\r\n                questions[questionIndex + 3],\r\n                questions[questionIndex + 4],\r\n                questions[questionIndex + 5]\r\n            ];\r\n            quizzes.push(quiz);\r\n        }\r\n        return quizzes;\r\n    };\r\n\r\n\r\n    function createQuizSlide() {\r\n        if (quizzes === null) {\r\n            return [];\r\n        }\r\n\r\n        return (\r\n            <Figure>\r\n                <Figure.Image width={171} height={180}\r\n                    alt={quizzes[props.quizNum][props.questionNum].answer}\r\n                    src={quizzes[props.quizNum][props.questionNum].picture} />\r\n                <Figure.Caption>\r\n                    <Button disabled={btnState} id={0} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[0]}</Button>\r\n                    <Button disabled={btnState} id={1} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[1]}</Button>\r\n                    <Button disabled={btnState} id={2} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[2]}</Button>\r\n                    <br />{answer}\r\n                </Figure.Caption>\r\n            </Figure>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Row><Col>\r\n            {createQuizSlide()}\r\n        </Col></Row>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizSlide from './QuizSlide';\r\nimport { useState } from 'react';\r\n\r\nexport default function Quiz(props) {\r\n    \r\n    const [score, setScore] = useState(0);\r\n    const [answerCount, setAnswerCount] = useState(1);\r\n\r\n    let onRestart = (event) => {\r\n        window.location.reload();\r\n    }\r\n\r\n    let onAnswerGiven = (answer) => {\r\n        setAnswerCount(answerCount + 1);\r\n        // Because setScore only changes the score after the function has\r\n        // finished, use this variable to store an extra point if the last\r\n        // question was answered right so that the correct final score can\r\n        // be displayed.\r\n        let lastPoint = 0;\r\n        // If the answer is correct, add 1 to the score.\r\n        if (answer) {\r\n            setScore(score + 1);\r\n            lastPoint = 1;\r\n        }\r\n        // When all of the questions have been answered, display the results.\r\n        if (answerCount >= 6) {\r\n            alert(\"Total score is: \"+ (score + lastPoint));\r\n            /*\r\n            let retval = {score: score+lastPoint};\r\n            api.addScore(retval)\r\n            .catch(e => console.log(e));\r\n            */\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <Row>\r\n                <Button onClick={onRestart}>Restart Quiz</Button>\r\n            </Row>\r\n            <Row>\r\n                <h2>Current Score: {score}/6</h2>\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={0} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={1} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={2} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={3} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={4} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={5} />\r\n            </Row>\r\n        </Col>\r\n    );\r\n}","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport { useHistory } from 'react-router-dom';\nimport NavigationBar from \"./components/NavigationBar\";\nimport { useState } from 'react';\nimport Quiz from './components/Quiz';\n\n\nfunction App() {\n    const [username, setUsername] = useState(localStorage.getItem('username') || '');\n    const [quizNum, setQuizNum] = useState(localStorage.getItem('quizID') || 0);\n\n    let onLoggedIn = (email) => {\n        localStorage.setItem('username', email);\n        setUsername(email);\n    }\n\n    let onQuizClicked = (quizID) => {\n        localStorage.setItem('quizID', quizID);\n        setQuizNum(quizID);\n    }\n    return (\n        <HashRouter>\n            <Container fluid>\n                <NavigationBar username={username} />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home onQuizClicked={onQuizClicked}/>\n                    </Route>\n                    <Route path=\"/login\" >\n                        <Login onLoggedIn={onLoggedIn} />\n                    </Route>\n                    <Route path=\"/quiz\" >\n                        <Quiz quizNum={quizNum}/>\n                    </Route>\n                </Switch>\n            </Container>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}