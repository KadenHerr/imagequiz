{"version":3,"sources":["flowers.js","components/Home.js","components/Login.js","components/NavigationBar.js","data.js","components/QuizSlide.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["flowers","name","picture","Home","props","onImageClick","event","onQuizClicked","target","id","style","textAlign","images","i","flw","push","onClick","className","to","Figure","Image","width","height","alt","src","Caption","createFlowers","Login","history","useHistory","useState","email","setEmail","password","setPassword","Form","onSubmit","trim","length","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","value","Text","Button","variant","NavigationBar","Navbar","bg","expand","Nav","Link","username","quizzes","questionIndex","questions","choiceIndex","question","choices","answer","generateQuestions","quiz","generateQuizzes","QuizSlide","setAnswer","btnState","setBtnState","onAnswerGiven","quizNum","questionNum","Row","Col","disabled","Quiz","score","setScore","answerCount","setAnswerCount","lastPoint","alert","window","location","reload","App","localStorage","getItem","setUsername","setQuizNum","Container","fluid","exact","path","quizID","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfefd1b9.chunk.js","sourcesContent":["let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","import flowers from '../flowers';\r\nimport { Link } from \"react-router-dom\";\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    let onImageClick = (event) => {\r\n        props.onQuizClicked(event.target.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: \"center\" }}>Home</h2>\r\n            {createFlowers()}\r\n        </div>\r\n    );\r\n\r\n\r\n    function createFlowers() {\r\n        let images = [];\r\n        let i = 0;\r\n        for (let flw in flowers) {\r\n            images.push(<Link id={i} onClick={onImageClick} className='link' to=\"/quiz\">\r\n                <Figure id={i}>\r\n                    <Figure.Image id={i} width={171} height={180}\r\n                        alt={flowers[flw].name}\r\n                        src={flowers[flw].picture} />\r\n                    <Figure.Caption id={i}>{flowers[flw].name}</Figure.Caption>\r\n                </Figure>\r\n            </Link>)\r\n            i++;\r\n        }\r\n        return images;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default function Login(props) {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let onLoginSubmitted = () => {\r\n        if (email.trim().length === 0 || password.trim().length === 0) {\r\n            return;\r\n        }\r\n        props.onLoggedIn(email);\r\n        history.push('/');\r\n    }\r\n\r\n    let onEmailChanged = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    let onPasswordChanged = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onLoginSubmitted}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChanged} />\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else (or will we?).\r\n        </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChanged} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n      </Button>\r\n        </Form>\r\n\r\n\r\n\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport Nav  from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport '../App.css'\r\n\r\nfunction NavigationBar(props) {\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n\r\n            <Nav.Link>\r\n                <Link className='link' to=\"/\">Home</Link>\r\n            </Nav.Link>\r\n\r\n            <Nav.Link>\r\n                {\r\n                    props.username === '' ?\r\n                    <Link className='link' to=\"/login\">Login</Link>\r\n                    :\r\n                    <Link className='link' to=\"/logout\">{props.username}, Logout</Link>\r\n                }\r\n            </Nav.Link>\r\n\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;","import flowers from './flowers';\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","import quizzes from '../data';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function QuizSlide(props) {\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [btnState, setBtnState] = useState(false);\r\n\r\n    let onAnswerGiven = (event) => {\r\n        setBtnState(true);\r\n        if(quizzes[props.quizNum][props.questionNum].choices[event.target.id] === quizzes[props.quizNum][props.questionNum].answer) {\r\n            setAnswer(\"You answered \"+ quizzes[props.quizNum][props.questionNum].answer+ \" and got it right!\");\r\n            props.onAnswerGiven(true);\r\n        } else {\r\n            setAnswer(\"You got it wrong. Correct answer is: \"+ quizzes[props.quizNum][props.questionNum].answer);\r\n            props.onAnswerGiven(false);\r\n        }\r\n    }\r\n    return (\r\n        <Row><Col>\r\n            <Figure>\r\n                <Figure.Image width={171} height={180}\r\n                    alt={quizzes[props.quizNum][props.questionNum].answer}\r\n                    src={quizzes[props.quizNum][props.questionNum].picture} />\r\n                <Figure.Caption>\r\n                    <Button disabled={btnState} id={0} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[0]}</Button>\r\n                    <Button disabled={btnState} id={1} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[1]}</Button>\r\n                    <Button disabled={btnState} id={2} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[2]}</Button>\r\n                    <br/>{answer}                   \r\n                </Figure.Caption>\r\n            </Figure>\r\n\r\n        </Col></Row>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizSlide from './QuizSlide';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Quiz(props) {\r\n    \r\n    const [score, setScore] = useState(0);\r\n    const [answerCount, setAnswerCount] = useState(1);\r\n\r\n    let onRestart = (event) => {\r\n        window.location.reload();\r\n    }\r\n\r\n    let onAnswerGiven = (answer) => {\r\n        setAnswerCount(answerCount + 1);\r\n        // Because setScore only changes the score after the function has\r\n        // finished, use this variable to store an extra point if the last\r\n        // question was answered right so that the correct final score can\r\n        // be displayed.\r\n        let lastPoint = 0;\r\n        // If the answer is correct, add 1 to the score.\r\n        if (answer) {\r\n            setScore(score + 1);\r\n            lastPoint = 1;\r\n        }\r\n        // When all of the questions have been answered, display the results.\r\n        if (answerCount >= 6) {\r\n            alert(\"Total score is: \"+ (score + lastPoint));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col>\r\n            <Row>\r\n                <Button onClick={onRestart}>Restart Quiz</Button>\r\n            </Row>\r\n            <Row>\r\n                <h2>Current Score: {score}/6</h2>\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={0} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={1} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={2} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={3} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={4} />\r\n            </Row>\r\n            <Row>\r\n                <QuizSlide onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={5} />\r\n            </Row>\r\n        </Col>\r\n    );\r\n}","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport { useHistory } from 'react-router-dom';\nimport NavigationBar from \"./components/NavigationBar\";\nimport { useState } from 'react';\nimport Quiz from './components/Quiz';\n\n\nfunction App() {\n    const history = useHistory();\n    const [username, setUsername] = useState(localStorage.getItem('username') || '');\n    const [quizNum, setQuizNum] = useState(localStorage.getItem('quizID') || 0);\n\n    let onLoggedIn = (email) => {\n        localStorage.setItem('username', email);\n        setUsername(email);\n    }\n\n    let onQuizClicked = (quizID) => {\n        localStorage.setItem('quizID', quizID);\n        setQuizNum(quizID);\n    }\n    return (\n        <HashRouter>\n            <Container fluid>\n                <NavigationBar username={username} />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home onQuizClicked={onQuizClicked}/>\n                    </Route>\n                    <Route path=\"/login\" >\n                        <Login onLoggedIn={onLoggedIn} />\n                    </Route>\n                    <Route path=\"/quiz\" >\n                        <Quiz quizNum={quizNum}/>\n                    </Route>\n                </Switch>\n            </Container>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}